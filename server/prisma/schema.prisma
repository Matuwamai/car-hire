generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  name        String
  profileImage   String?
  createdAt DateTime @default(now())
  role      Role     @default(ADMIN)
  organization  Organization?
  carOwner CarOwner?
}
enum Role {
  ADMIN
  CAR_OWNER
  ORGANIZATION
}

model CarOwner {
  id           Int      @id @default(autoincrement())
  phone        String   @unique
  idNumber     String   @unique
  address      String
  cars         Car[]
  userId     Int @unique
  user        User @relation(fields: [userId],references: [id])
}

model Organization {
  id             Int       @id @default(autoincrement())
  registrationNo String    @unique
  license        String
  isVerified     Boolean   @default(false)
  bookings       Booking[]
  userId          Int @unique
  user   User @relation(fields: [userId], references: [id])
}



model CarCategory {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  description String?
  cars        Car[]
  createdAt   DateTime @default(now())
}

model Car {
  id              Int         @id @default(autoincrement())
  owner           CarOwner    @relation(fields: [ownerId], references: [id])
  ownerId         Int        
  category        CarCategory @relation(fields: [categoryId], references: [id])
  categoryId      Int
  images          CarImage[]  
  registrationNo  String      @unique
  ownerName       String
  brand           String
  model           String
  pricePerDay     Float?
  mileage         Float?
  color           String
  description     String?
  isApproved      Boolean     @default(false)
  createdAt       DateTime    @default(now())
  isHired         Boolean     @default(false)
  bookings        Booking[]
}

model CarImage {
  id     Int    @id @default(autoincrement())
  car    Car    @relation(fields: [carId], references: [id])
  carId  Int
  url    String
}


model Booking {
  id              Int          @id @default(autoincrement())
  car             Car          @relation(fields: [carId], references: [id])
  carId          Int
  organization   Organization  @relation(fields: [organizationId], references: [id])
  organizationId Int
  totalPrice     Float 
  status         String       @default("pending") 
  createdAt      DateTime     @default(now())
  startDate      DateTime
  endDate        DateTime
  isActive       Boolean      @default(true) 
}
