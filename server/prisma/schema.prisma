generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Admin {
 id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  role      Role     @default(ADMIN) 
}

model CarOwner {
 id        Int      @id @default(autoincrement())
  name      String
  phone     String   @unique
  idNumber  String   @unique
  email     String   @unique
  password  String
  address   String
  profileImage String? 
  cars      Car[]
  createdAt DateTime @default(now())
  role      Role     @default(CAR_OWNER)
}

model Organization {
id        Int      @id @default(autoincrement())
  name            String
  registrationNo  String   @unique
  license         String
  email           String   @unique
  password        String
  profileImage    String?
  isVerified      Boolean  @default(false)
  createdAt       DateTime @default(now())
  role            Role     @default(ORGANIZATION)
}
enum Role {
  ADMIN
  CAR_OWNER
  ORGANIZATION
}

model CarCategory {
id        Int      @id @default(autoincrement())
  name        String   @unique
  description String?
  cars        Car[]
  createdAt   DateTime @default(now())
}

model Car {
  id        Int      @id @default(autoincrement())
  owner           CarOwner     @relation(fields: [ownerId], references: [id])
  ownerId         Int
  category        CarCategory  @relation(fields: [categoryId], references: [id])
  categoryId      Int
  images          Json   // Array of image URLs
  registrationNo  String   @unique
  ownerName       String
  brand           String
  model           String
  pricePerDay     Float?
  pricePerMonth   Float?
  pricePer3Months Float?
  pricePer6Months Float?
  pricePerYear    Float?
  mileage         Float?
  color           String
  description     String?
  isApproved      Boolean  @default(false) // Admin verification
  createdAt       DateTime @default(now())
   isHired         Boolean    @default(false) // Status to check if the car is hired
}
